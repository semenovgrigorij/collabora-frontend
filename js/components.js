// js/components.js - –ó–∞–≥—Ä—É–∑—á–∏–∫ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤

// –ü–æ–¥–∞–≤–ª–µ–Ω–∏–µ –æ—à–∏–±–æ–∫ –æ—Ç —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–π –±—Ä–∞—É–∑–µ—Ä–∞
window.addEventListener('error', function(e) {
    // –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –æ—à–∏–±–∫–∏ –æ—Ç content scripts —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–π
    if (e.filename && e.filename.includes('content.js')) {
        e.preventDefault();
        return false;
    }
});

// –ü–æ–¥–∞–≤–ª–µ–Ω–∏–µ –Ω–µ–æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã—Ö –ø—Ä–æ–º–∏—Å–æ–≤ –æ—Ç —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–π
window.addEventListener('unhandledrejection', function(e) {
    // –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –æ—à–∏–±–∫–∏ "message port closed"
    if (e.reason && e.reason.message && 
        e.reason.message.includes('message port closed')) {
        e.preventDefault();
        return false;
    }
});

class ComponentManager {
    constructor() {
        // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–µ–∫—É—â–∏–π —è–∑—ã–∫ –Ω–∞ –æ—Å–Ω–æ–≤–µ URL
        const currentPath = window.location.pathname;
        const isEnglishPage = currentPath.includes('/en/');
        
        console.log(`üåê –û–ø—Ä–µ–¥–µ–ª–µ–Ω —è–∑—ã–∫: ${isEnglishPage ? 'EN' : 'UA'}, –ø—É—Ç—å: ${currentPath}`);
        
        // –í—ã–±–∏—Ä–∞–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —è–∑—ã–∫–∞
        // –î–ª—è –∞–Ω–≥–ª–∏–π—Å–∫–∏—Ö —Å—Ç—Ä–∞–Ω–∏—Ü –∏—Å–ø–æ–ª—å–∑—É–µ–º –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω—ã–π –ø—É—Ç—å –∫ –∫–æ—Ä–Ω–µ–≤–æ–π –ø–∞–ø–∫–µ
        this.components = {
            header: isEnglishPage ? '../components/header-en.html' : './components/header.html',
            footer: isEnglishPage ? '../components/footer-en.html' : './components/footer.html'
        };
        this.isInitialized = false;
        this.currentLanguage = isEnglishPage ? 'EN' : 'UA';
    }

    // –ó–∞–≥—Ä—É–∑–∫–∞ –æ–¥–Ω–æ–≥–æ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
    async loadComponent(elementId, componentPath) {
        try {
            console.log(`üîÑ –ó–∞–≥—Ä—É–∂–∞–µ–º: ${componentPath}`);
            
            const response = await fetch(componentPath);
            if (!response.ok) {
                throw new Error(`HTTP ${response.status}: ${response.statusText}`);
            }
            
            const html = await response.text();
            const element = document.getElementById(elementId);
            
            if (element) {
                element.innerHTML = html;
                console.log(`‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω: ${componentPath}`);
                return true;
            } else {
                console.error(`‚ùå –≠–ª–µ–º–µ–Ω—Ç #${elementId} –Ω–µ –Ω–∞–π–¥–µ–Ω`);
                return false;
            }
            
        } catch (error) {
            console.error(`‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ ${componentPath}:`, error.message);
            
            // Fallback –∫–æ–Ω—Ç–µ–Ω—Ç
            const element = document.getElementById(elementId);
            if (element) {
                if (elementId === 'header-placeholder') {
                    element.innerHTML = '<header><div class="header-wrapper"><p>–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ header</p></div></header>';
                } else if (elementId === 'footer-placeholder') {
                    element.innerHTML = '<footer><div class="footer-wrapper"><p>–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ footer</p></div></footer>';
                }
            }
            return false;
        }
    }

    // –ó–∞–≥—Ä—É–∑–∫–∞ –≤—Å–µ—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
    async initializeComponents() {
        if (this.isInitialized) return;

        console.log('üöÄ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤...');
        
        const startTime = performance.now();
        
        try {
            // –ó–∞–≥—Ä—É–∂–∞–µ–º –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω–æ
            const loadPromises = [
                this.loadComponent('header-placeholder', this.components.header),
                this.loadComponent('footer-placeholder', this.components.footer)
            ];
            
            const results = await Promise.allSettled(loadPromises);
            
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
            const headerLoaded = results[0].status === 'fulfilled' && results[0].value;
            const footerLoaded = results[1].status === 'fulfilled' && results[1].value;
            
            if (headerLoaded) {
                console.log('‚úÖ Header –∑–∞–≥—Ä—É–∂–µ–Ω —É—Å–ø–µ—à–Ω–æ');
            }
            if (footerLoaded) {
                console.log('‚úÖ Footer –∑–∞–≥—Ä—É–∂–µ–Ω —É—Å–ø–µ—à–Ω–æ');
            }
            
            const endTime = performance.now();
            console.log(`‚ö° –ö–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –∑–∞–≥—Ä—É–∂–µ–Ω—ã –∑–∞ ${Math.round(endTime - startTime)}–º—Å`);
            
            // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª –ø–æ—Å–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏
            this.setupComponentFeatures();
            this.isInitialized = true;
            
            // –£–≤–µ–¥–æ–º–ª—è–µ–º –æ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏
            document.dispatchEvent(new CustomEvent('componentsLoaded'));
            
        } catch (error) {
            console.error('‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤:', error);
        }
    }

    // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–∞ –ø–æ—Å–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏
    setupComponentFeatures() {
        // –ü–æ–¥—Å–≤–µ—Ç–∫–∞ –∞–∫—Ç–∏–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã
        this.highlightActivePage();
        
        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –º–æ–±–∏–ª—å–Ω–æ–≥–æ –º–µ–Ω—é
        this.initMobileMenu();
        
        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —è–∑—ã–∫–æ–≤–æ–≥–æ —Å–µ–ª–µ–∫—Ç–æ—Ä–∞
        this.initLanguageSelector();
        
        // –î–æ–±–∞–≤–ª–µ–Ω–∏–µ hover —ç—Ñ—Ñ–µ–∫—Ç–æ–≤
        this.addInteractionEffects();
        
        // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è —Å—Å—ã–ª–æ–∫
        this.setupLinkHandlers();
    }

    // –ü–æ–¥—Å–≤–µ—Ç–∫–∞ –∞–∫—Ç–∏–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    highlightActivePage() {
        const currentPath = window.location.pathname;
        const currentPage = currentPath.split('/').pop() || 'home.html';
        
        console.log(`üéØ –¢–µ–∫—É—â–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞: ${currentPage}`);
        
        const navLinks = document.querySelectorAll('.header-link');
        
        navLinks.forEach(link => {
            const href = link.getAttribute('href');
            const linkPage = href ? href.split('/').pop() : '';
            
            // –£–±–∏—Ä–∞–µ–º –∞–∫—Ç–∏–≤–Ω—ã–π –∫–ª–∞—Å—Å
            link.classList.remove('active');
            
            // –î–æ–±–∞–≤–ª—è–µ–º –∞–∫—Ç–∏–≤–Ω—ã–π –∫–ª–∞—Å—Å
            if (linkPage === currentPage || 
                (currentPage === '' && linkPage === 'home.html') ||
                (currentPage === 'home.html' && linkPage === '')) {
                
                link.classList.add('active');
                link.setAttribute('aria-current', 'page');
                console.log(`üîó –ê–∫—Ç–∏–≤–Ω–∞—è —Å—Å—ã–ª–∫–∞: ${href}`);
            }
        });
    }

    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —è–∑—ã–∫–æ–≤–æ–≥–æ —Å–µ–ª–µ–∫—Ç–æ—Ä–∞
    initLanguageSelector() {
        const langSelector = document.getElementById('langSelector');
        const currentLangText = document.querySelector('.current-lang-text');
        
        if (!langSelector || !currentLangText) {
            console.warn('‚ö†Ô∏è –≠–ª–µ–º–µ–Ω—Ç—ã —è–∑—ã–∫–æ–≤–æ–≥–æ —Å–µ–ª–µ–∫—Ç–æ—Ä–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã');
            return;
        }

        console.log('üåê –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —è–∑—ã–∫–æ–≤–æ–≥–æ —Å–µ–ª–µ–∫—Ç–æ—Ä–∞...');

        // –ò—Å–ø–æ–ª—å–∑—É–µ–º –¥–µ–ª–µ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–±—ã—Ç–∏–π
        langSelector.addEventListener('click', (e) => {
            const option = e.target.closest('.lang-option');
            if (!option) return;
            
            e.stopPropagation();
            
            const selectedLang = option.getAttribute('data-lang');
            const currentPath = window.location.pathname;
            
            // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ü–µ–ª–µ–≤–æ–π URL
            const targetUrl = this.getCorrespondingPageUrl(currentPath, selectedLang);
            
            console.log('üåê –í—ã–±—Ä–∞–Ω —è–∑—ã–∫:', selectedLang, '–¢–µ–∫—É—â–∏–π –ø—É—Ç—å:', currentPath, '–¶–µ–ª–µ–≤–æ–π URL:', targetUrl);
            
            // –ï—Å–ª–∏ —ç—Ç–æ —Ç–æ—Ç –∂–µ —è–∑—ã–∫, –Ω–∏—á–µ–≥–æ –Ω–µ –¥–µ–ª–∞–µ–º
            if (selectedLang === this.currentLanguage) {
                console.log('üåê –¢–æ—Ç –∂–µ —è–∑—ã–∫, –ø–µ—Ä–µ—Ö–æ–¥ –Ω–µ —Ç—Ä–µ–±—É–µ—Ç—Å—è');
                return;
            }
            
            // –ü–µ—Ä–µ—Ö–æ–¥ –Ω–∞ –¥—Ä—É–≥—É—é —è–∑—ã–∫–æ–≤—É—é –≤–µ—Ä—Å–∏—é
            if (targetUrl && targetUrl !== currentPath) {
                try {
                    console.log('üöÄ –ü–µ—Ä–µ—Ö–æ–¥ –Ω–∞:', targetUrl);
                    setTimeout(() => {
                        window.location.href = targetUrl;
                    }, 100);
                } catch (error) {
                    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–µ—Ä–µ—Ö–æ–¥–µ:', error);
                    window.location.href = targetUrl;
                }
            }
        });

        // –ü—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ–º –∑–∞–∫—Ä—ã—Ç–∏–µ –ø—Ä–∏ –∫–ª–∏–∫–µ –Ω–∞ —Å–∞–º —Å–µ–ª–µ–∫—Ç–æ—Ä
        langSelector.addEventListener('click', function(e) {
            if (e.target === this || e.target.closest('.current-lang')) {
                e.stopPropagation();
            }
        });

        console.log('‚úÖ –Ø–∑—ã–∫–æ–≤–æ–π —Å–µ–ª–µ–∫—Ç–æ—Ä –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
    }

    // –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã –Ω–∞ –¥—Ä—É–≥–æ–º —è–∑—ã–∫–µ
    getCorrespondingPageUrl(currentPath, targetLang) {
        // –ü–æ–ª—É—á–∞–µ–º –∏–º—è —Ç–µ–∫—É—â–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã
        let currentPage = currentPath.split('/').pop() || 'home.html';
        const isCurrentlyEnglish = currentPath.includes('/en/');
        
        console.log(`üîç –¢–µ–∫—É—â–∏–π –ø—É—Ç—å: ${currentPath}, —Å—Ç—Ä–∞–Ω–∏—Ü–∞: ${currentPage}, –∞–Ω–≥–ª–∏–π—Å–∫–∏–π: ${isCurrentlyEnglish}`);
        
        // –ï—Å–ª–∏ —Ç–µ–∫—É—â–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –ø—É—Å—Ç–∞—è (–∫–æ—Ä–Ω–µ–≤–æ–π –ø—É—Ç—å), –∏—Å–ø–æ–ª—å–∑—É–µ–º home.html
        if (!currentPage || currentPage === '') {
            currentPage = 'home.html';
        }
        
        // –ö–∞—Ä—Ç–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–π —Å—Ç—Ä–∞–Ω–∏—Ü
        const pageMapping = {
            'home.html': 'home.html',
            'contacts.html': 'contacts.html',
            'privacy-policy.html': 'privacy-policy.html',
            'authorization.html': 'authorization.html',
            'registration.html': 'registration.html',
            'choice-of-direction.html': 'choice-of-direction.html',
            'password-recovery.html': 'password-recovery.html',
            'rubricator.html': 'rubricator.html',
            'thank-page.html': 'thank-page.html',
            'b2b.html': 'b2b.html',
            'sphere-of-possibilities.html': 'sphere-of-possibilities.html',
            'mission.html': 'mission.html',
            'social-initiatives.html': 'social-initiatives.html'
        };
        
        // –ï—Å–ª–∏ —Ç–µ–∫—É—â–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –≤ –∫–∞—Ä—Ç–µ, –∏—Å–ø–æ–ª—å–∑—É–µ–º home.html
        const targetPage = pageMapping[currentPage] || 'home.html';
        
        let targetUrl;
        
        if (targetLang === 'EN') {
            // –ü–µ—Ä–µ—Ö–æ–¥ –Ω–∞ –∞–Ω–≥–ª–∏–π—Å–∫—É—é –≤–µ—Ä—Å–∏—é
            targetUrl = `${basePath}/en/${targetPage}`;
        } else if (targetLang === 'UA') {
            // –ü–µ—Ä–µ—Ö–æ–¥ –Ω–∞ —É–∫—Ä–∞–∏–Ω—Å–∫—É—é –≤–µ—Ä—Å–∏—é
            if (targetPage === 'home.html') {
                // –ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ - –ø–µ—Ä–µ—Ö–æ–¥–∏–º –≤ –∫–æ—Ä–µ–Ω—å
                targetUrl = '/';
            } else {
                // –û—Å—Ç–∞–ª—å–Ω—ã–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã - –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω—ã–π –ø—É—Ç—å
                targetUrl = `${basePath}/${targetPage}`;
            }
        } else {
            targetUrl = currentPath; // –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Ç–µ–∫—É—â–∏–π –ø—É—Ç—å, –µ—Å–ª–∏ —á—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫
        }
        
        console.log(`üéØ –¶–µ–ª–µ–≤–æ–π URL –¥–ª—è ${targetLang}: ${targetUrl}`);
        return targetUrl;
    }

    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –º–æ–±–∏–ª—å–Ω–æ–≥–æ –º–µ–Ω—é
    initMobileMenu() {
        const hamburgerBtn = document.querySelector('.hamburger-btn');
        const mobileOverlay = document.querySelector('.mobile-overlay');
        const menuLinks = document.querySelectorAll('.header-link');
        const entranceRegistration = document.querySelector('.entrance-registration');
        const headerNav = document.querySelector('.header-nav');
        const headerWrapperRight = document.querySelector('.header-wrapper-right');
        
        if (!hamburgerBtn || !mobileOverlay || !headerNav) {
            console.warn('‚ö†Ô∏è –≠–ª–µ–º–µ–Ω—Ç—ã –º–æ–±–∏–ª—å–Ω–æ–≥–æ –º–µ–Ω—é –Ω–µ –Ω–∞–π–¥–µ–Ω—ã');
            return;
        }

        // –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è
        let isMovedToNav = false;
        let scrollPosition = 0;
        const originalParent = headerWrapperRight;

        // –§—É–Ω–∫—Ü–∏—è –ø–µ—Ä–µ–º–µ—â–µ–Ω–∏—è –±–ª–æ–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
        const moveEntranceRegistration = () => {
            const windowWidth = window.innerWidth;
            
            if (windowWidth <= 361 && !isMovedToNav && entranceRegistration) {
                headerNav.appendChild(entranceRegistration);
                isMovedToNav = true;
                entranceRegistration.classList.add('entrance-registration-mobile');
                console.log('üì± –ë–ª–æ–∫ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –ø–µ—Ä–µ–º–µ—â–µ–Ω –≤ –Ω–∞–≤–∏–≥–∞—Ü–∏—é');
                
            } else if (windowWidth > 361 && isMovedToNav && entranceRegistration) {
                originalParent.insertBefore(entranceRegistration, hamburgerBtn);
                isMovedToNav = false;
                entranceRegistration.classList.remove('entrance-registration-mobile');
                console.log('üíª –ë–ª–æ–∫ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –≤–æ–∑–≤—Ä–∞—â–µ–Ω –≤ header');
            }
        };

        // –§—É–Ω–∫—Ü–∏—è –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è –º–µ–Ω—é
        const toggleMenu = () => {
            const body = document.body;
            const isOpen = body.classList.contains('menu-open');
            
            if (!isOpen) {
                // –û—Ç–∫—Ä—ã–≤–∞–µ–º –º–µ–Ω—é
                scrollPosition = window.pageYOffset;
                body.style.top = -scrollPosition + 'px';
                body.classList.add('menu-open');
                hamburgerBtn.setAttribute('aria-expanded', 'true');
                console.log('üì± –ú–æ–±–∏–ª—å–Ω–æ–µ –º–µ–Ω—é –æ—Ç–∫—Ä—ã—Ç–æ');
            } else {
                // –ó–∞–∫—Ä—ã–≤–∞–µ–º –º–µ–Ω—é
                body.classList.remove('menu-open');
                body.style.top = '';
                window.scrollTo(0, scrollPosition);
                hamburgerBtn.setAttribute('aria-expanded', 'false');
                console.log('üì± –ú–æ–±–∏–ª—å–Ω–æ–µ –º–µ–Ω—é –∑–∞–∫—Ä—ã—Ç–æ');
            }
        };

        // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π
        hamburgerBtn.addEventListener('click', toggleMenu);
        mobileOverlay.addEventListener('click', toggleMenu);

        // –ó–∞–∫—Ä—ã—Ç–∏–µ –º–µ–Ω—é –ø—Ä–∏ –∫–ª–∏–∫–µ –Ω–∞ —Å—Å—ã–ª–∫—É
        menuLinks.forEach(link => {
            link.addEventListener('click', () => {
                if (document.body.classList.contains('menu-open')) {
                    toggleMenu();
                }
            });
        });

        // –ó–∞–∫—Ä—ã—Ç–∏–µ –ø–æ Escape
        document.addEventListener('keydown', (event) => {
            if (event.key === 'Escape' && document.body.classList.contains('menu-open')) {
                toggleMenu();
            }
        });

        // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ä–∞–∑–º–µ—Ä–∞ –æ–∫–Ω–∞
        window.addEventListener('resize', () => {
            moveEntranceRegistration();
            
            // –ó–∞–∫—Ä—ã–≤–∞–µ–º –º–µ–Ω—é –Ω–∞ –±–æ–ª—å—à–∏—Ö —ç–∫—Ä–∞–Ω–∞—Ö
            if (window.innerWidth > 769 && document.body.classList.contains('menu-open')) {
                toggleMenu();
            }
        });

        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
        moveEntranceRegistration();
        hamburgerBtn.setAttribute('aria-expanded', 'false');
        
        console.log('üì± –ú–æ–±–∏–ª—å–Ω–æ–µ –º–µ–Ω—é –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–æ');
    }

    // –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã—Ö —ç—Ñ—Ñ–µ–∫—Ç–æ–≤
    addInteractionEffects() {
        // Hover —ç—Ñ—Ñ–µ–∫—Ç—ã –¥–ª—è —Å—Å—ã–ª–æ–∫
        const links = document.querySelectorAll('.header-link, .header-entrance, .header-registration');
        
        links.forEach(link => {
            link.addEventListener('mouseenter', () => {
                link.style.transition = 'all 0.3s ease';
            });
        });
    }

    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è —Å—Å—ã–ª–æ–∫
    setupLinkHandlers() {
        const allLinks = document.querySelectorAll('a[href]');
        
        allLinks.forEach(link => {
            // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏—Ö —Å—Å—ã–ª–æ–∫
            if (link.href.includes(window.location.origin)) {
                link.addEventListener('click', (e) => {
                    console.log(`üîó –ü–µ—Ä–µ—Ö–æ–¥ –Ω–∞: ${link.href}`);
                    
                    // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ø—Ä–µ–ª–æ–∞–¥–µ—Ä, –∞–Ω–∞–ª–∏—Ç–∏–∫—É –∏ —Ç.–¥.
                });
            }
            
            // –í–Ω–µ—à–Ω–∏–µ —Å—Å—ã–ª–∫–∏ –æ—Ç–∫—Ä—ã–≤–∞–µ–º –≤ –Ω–æ–≤–æ–π –≤–∫–ª–∞–¥–∫–µ
            if (link.href.startsWith('http') && !link.href.includes(window.location.origin)) {
                link.setAttribute('target', '_blank');
                link.setAttribute('rel', 'noopener noreferrer');
            }
        });
    }
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ DOM
document.addEventListener('DOMContentLoaded', async () => {
    console.log('üåü DOM –∑–∞–≥—Ä—É–∂–µ–Ω, –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã...');
    
    const componentManager = new ComponentManager();
    await componentManager.initializeComponents();
    
    // –î–æ–±–∞–≤–ª—è–µ–º –∫–ª–∞—Å—Å –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏
    document.body.classList.add('components-ready');
    
    console.log('üéâ –í—Å–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –≥–æ—Ç–æ–≤—ã –∫ —Ä–∞–±–æ—Ç–µ!');
});

// –≠–∫—Å–ø–æ—Ä—Ç –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ –¥—Ä—É–≥–∏—Ö —Å–∫—Ä–∏–ø—Ç–∞—Ö
window.ComponentManager = ComponentManager;