// js/rubricator.js - –§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å —Ä—É–±—Ä–∏–∫–∞—Ç–æ—Ä–∞

class RubricatorManager {
    constructor() {
        // –î–∞–Ω–Ω—ã–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–π (–º–æ–∂–Ω–æ –∑–∞–º–µ–Ω–∏—Ç—å –Ω–∞ API)
        this.allCategories = [
            { id: 1, name: "–ü—Ä–æ–º–∏—Å–ª–æ–≤—ñ—Å—Ç—å —Ç–∞ –ø–µ—Ä–µ—Ä–æ–±–∫–∞", icon: "categories-icon.svg", region: "kyiv", businessForm: "tov", spheres: ["finance", "marketplace"] },
            { id: 2, name: "–ë—É–¥—ñ–≤–Ω–∏—Ü—Ç–≤–æ, –º–∞—Ç–µ—Ä—ñ–∞–ª–∏, –¥–µ—Ä–µ–≤–æ–ø–µ—Ä–µ—Ä–æ–±–∫–∞", icon: "categories-icon-1.svg", region: "lviv", businessForm: "fop", spheres: ["marketplace"] },
            { id: 3, name: "–ê–≥—Ä–æ —ñ —Ö–∞—Ä—á–æ–≤–∞ –ø—Ä–æ–º–∏—Å–ª–æ–≤—ñ—Å—Ç—å", icon: "categories-icon-2.svg", region: "odesa", businessForm: "at", spheres: ["marketplace"] },
            { id: 4, name: "–ï–Ω–µ—Ä–≥–µ—Ç–∏–∫–∞", icon: "categories-icon-3.svg", region: "kharkiv", businessForm: "tov", spheres: ["finance"] },
            { id: 5, name: "–õ–æ–≥—ñ—Å—Ç–∏–∫–∞ —ñ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç", icon: "categories-icon-4.svg", region: "dnipro", businessForm: "pp", spheres: ["marketplace"] },
            { id: 6, name: "–§—ñ–Ω–∞–Ω—Å–∏ —Ç–∞ –±—ñ–∑–Ω–µ—Å –ø–æ—Å–ª—É–≥–∏", icon: "categories-icon-5.svg", region: "kyiv", businessForm: "tov", spheres: ["finance", "consulting", "marketplace"] },
            { id: 7, name: "–û–ø—Ç–æ–≤–∞ —Ç–∞ —Ä–æ–∑–¥—Ä—ñ–±–Ω–∞ —Ç–æ—Ä–≥—ñ–≤–ª—è", icon: "categories-icon-6.svg", region: "lviv", businessForm: "fop", spheres: ["marketplace"] },
            { id: 8, name: "–õ–µ–≥–∫–∞ –ø—Ä–æ–º–∏—Å–ª–æ–≤—ñ—Å—Ç—å/–º–æ–¥–∞", icon: "categories-icon-7.svg", region: "odesa", businessForm: "at", spheres: ["marketplace"] },
            { id: 9, name: "IT —Ç–∞ —Ç–µ–ª–µ–∫–æ–º—É–Ω—ñ–∫–∞—Ü—ñ—ó", icon: "categories-icon-8.svg", region: "kyiv", businessForm: "tov", spheres: ["finance", "consulting", "education"] },
            { id: 10, name: "–ó–¥–æ—Ä–æ–≤'—è —Ç–∞ –∫—Ä–∞—Å–∞", icon: "categories-icon-9.svg", region: "kharkiv", businessForm: "fop", spheres: ["consulting", "marketplace"] },
            { id: 11, name: "–¢—É—Ä–∏–∑–º, —Å–ø–æ—Ä—Ç, —Ä–æ–∑–≤–∞–≥–∏", icon: "categories-icon-10.svg", region: "dnipro", businessForm: "pp", spheres: ["marketplace"]  },
            { id: 12, name: "–û—Å–≤—ñ—Ç–∞, –Ω–∞—É–∫–∞, –º–∏—Å—Ç–µ—Ü—Ç–≤–æ", icon: "categories-icon-11.svg", region: "kyiv", businessForm: "tov", spheres: ["consulting", "education"] },
            { id: 13, name: "–ú–µ–¥—ñ–∞ —Ç–∞ —Ä–µ–∫–ª–∞–º–∞", icon: "categories-icon-12.svg", region: "lviv", businessForm: "at", spheres: ["education", "consulting"] },
            { id: 14, name: "–ö—Ä–µ–∞—Ç–∏–≤–Ω–∞ —ñ–Ω–¥—É—Å—Ç—Ä—ñ—è", icon: "categories-icon-13.svg", region: "odesa", businessForm: "fop", spheres: ["education", "consulting"]  },
            { id: 15, name: "–Ü–Ω—à–µ", icon: "categories-icon-14.svg", region: "kharkiv", businessForm: "tov", spheres: ["finance", "consulting", "education", "marketplace"]  },
            // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ –ø–∞–≥–∏–Ω–∞—Ü–∏–∏
            { id: 16, name: "–ú–∞—à–∏–Ω–æ–±—É–¥—É–≤–∞–Ω–Ω—è", icon: "categories-icon.svg", region: "dnipro", businessForm: "at" },
            { id: 17, name: "–•—ñ–º—ñ—á–Ω–∞ –ø—Ä–æ–º–∏—Å–ª–æ–≤—ñ—Å—Ç—å", icon: "categories-icon-1.svg", region: "kyiv", businessForm: "tov" },
            { id: 18, name: "–¢–µ–∫—Å—Ç–∏–ª—å–Ω–∞ –ø—Ä–æ–º–∏—Å–ª–æ–≤—ñ—Å—Ç—å", icon: "categories-icon-2.svg", region: "lviv", businessForm: "fop" },
            { id: 19, name: "–ú–µ—Ç–∞–ª—É—Ä–≥—ñ—è", icon: "categories-icon-3.svg", region: "odesa", businessForm: "pp" },
            { id: 20, name: "–í–∏–¥–æ–±—É–≤–Ω–∞ –ø—Ä–æ–º–∏—Å–ª–æ–≤—ñ—Å—Ç—å", icon: "categories-icon-4.svg", region: "kharkiv", businessForm: "tov" },
            { id: 21, name: "–§–∞—Ä–º–∞—Ü–µ–≤—Ç–∏–∫–∞", icon: "categories-icon-5.svg", region: "dnipro", businessForm: "at" },
            { id: 22, name: "–ë—ñ–æ—Ç–µ—Ö–Ω–æ–ª–æ–≥—ñ—ó", icon: "categories-icon-6.svg", region: "kyiv", businessForm: "fop" },
            { id: 23, name: "–ù–∞–Ω–æ—Ç–µ—Ö–Ω–æ–ª–æ–≥—ñ—ó", icon: "categories-icon-7.svg", region: "lviv", businessForm: "tov" },
            { id: 24, name: "–ö–æ—Å–º—ñ—á–Ω—ñ —Ç–µ—Ö–Ω–æ–ª–æ–≥—ñ—ó", icon: "categories-icon-8.svg", region: "odesa", businessForm: "pp" },
            { id: 25, name: "–ï–∫–æ–ª–æ–≥—ñ—è —Ç–∞ –ø—Ä–∏—Ä–æ–¥–æ–æ—Ö–æ—Ä–æ–Ω–∞", icon: "categories-icon-9.svg", region: "kharkiv", businessForm: "at" }
        ];

        this.filteredCategories = [...this.allCategories];
        this.currentPage = 1;
        this.itemsPerPage = 15;
        this.currentFilters = {
            search: '',
            region: '',
            businessForm: ''
        };

        // –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≤—ã–±—Ä–∞–Ω–Ω–æ–π —Å—Ñ–µ—Ä–µ
        this.selectedSphere = null;
        this.checkSphereSelection();

        this.init();
    }

    init() {
        this.loadSphereSelection();
        this.setupEventListeners();
        this.renderCategories();
        this.renderPagination();
        this.updateResultsCount();
        this.updatePageTitle();
    }

        // –ú–µ—Ç–æ–¥ –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö –æ –≤—ã–±—Ä–∞–Ω–Ω–æ–π —Å—Ñ–µ—Ä–µ
loadSphereSelection() {
    try {
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º sessionStorage
        const sphereData = sessionStorage.getItem('sphereSelection');
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º URL –ø–∞—Ä–∞–º–µ—Ç—Ä—ã
        const urlParams = new URLSearchParams(window.location.search);
        const sphereParam = urlParams.get('sphere');
        
        if (sphereData) {
            this.selectedSphere = JSON.parse(sphereData);
            console.log('üåü –ó–∞–≥—Ä—É–∂–µ–Ω—ã –¥–∞–Ω–Ω—ã–µ –æ –≤—ã–±—Ä–∞–Ω–Ω–æ–π —Å—Ñ–µ—Ä–µ:', this.selectedSphere);
            
            // –ü—Ä–∏–º–µ–Ω—è–µ–º —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏—é –ø–æ —Å—Ñ–µ—Ä–µ
            this.applySphereFilter();
            
        } else if (sphereParam) {
            console.log('üîó –û–±–Ω–∞—Ä—É–∂–µ–Ω –ø–∞—Ä–∞–º–µ—Ç—Ä —Å—Ñ–µ—Ä—ã –≤ URL:', sphereParam);
            
            // –°–æ–∑–¥–∞–µ–º –±–∞–∑–æ–≤—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å—Ñ–µ—Ä–µ –∏–∑ URL
            this.selectedSphere = {
                sphereType: sphereParam,
                source: 'url-parameter'
            };
            
            this.applySphereFilter();
        }
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –¥–∞–Ω–Ω—ã—Ö –æ —Å—Ñ–µ—Ä–µ:', error);
    }
}
checkSphereSelection() {
    console.log('üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—ã–±—Ä–∞–Ω–Ω—É—é —Å—Ñ–µ—Ä—É...');
    
    try {
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º sessionStorage
        const sphereData = sessionStorage.getItem('sphereSelection');
        if (sphereData) {
            this.selectedSphere = JSON.parse(sphereData);
            console.log('‚úÖ –ù–∞–π–¥–µ–Ω–∞ —Å—Ñ–µ—Ä–∞ –≤ sessionStorage:', this.selectedSphere);
            this.applySphereFilter();
            return;
        }
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º URL –ø–∞—Ä–∞–º–µ—Ç—Ä—ã
        const urlParams = new URLSearchParams(window.location.search);
        const sphereParam = urlParams.get('sphere');
        if (sphereParam) {
            console.log('‚úÖ –ù–∞–π–¥–µ–Ω –ø–∞—Ä–∞–º–µ—Ç—Ä sphere –≤ URL:', sphereParam);
            this.selectedSphere = { sphereType: sphereParam };
            this.applySphereFilter();
            return;
        }
        
        console.log('‚ÑπÔ∏è –°—Ñ–µ—Ä–∞ –Ω–µ –≤—ã–±—Ä–∞–Ω–∞, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –≤—Å–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏');
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —Å—Ñ–µ—Ä—ã:', error);
    }
}

applySphereFilter() {
    if (!this.selectedSphere || !this.selectedSphere.sphereType) {
        console.log('‚ö†Ô∏è –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –æ —Å—Ñ–µ—Ä–µ –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏');
        return;
    }
    
    const sphereType = this.selectedSphere.sphereType;
    console.log(`üéØ –ü—Ä–∏–º–µ–Ω—è–µ–º —Ñ–∏–ª—å—Ç—Ä –ø–æ —Å—Ñ–µ—Ä–µ: ${sphereType}`);
    
    // –§–∏–ª—å—Ç—Ä—É–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –ø–æ —Å—Ñ–µ—Ä–µ
    this.filteredCategories = this.allCategories.filter(category => {
        const hasSphere = category.spheres && category.spheres.includes(sphereType);
        if (hasSphere) {
            console.log(`‚úÖ –ö–∞—Ç–µ–≥–æ—Ä–∏—è "${category.name}" —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç —Å—Ñ–µ—Ä–µ ${sphereType}`);
        }
        return hasSphere;
    });
    
    console.log(`üìä –û—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞–Ω–æ ${this.filteredCategories.length} –∫–∞—Ç–µ–≥–æ—Ä–∏–π –∏–∑ ${this.allCategories.length}`);
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫
    this.updatePageTitle();
}

updatePageTitle() {
    if (!this.selectedSphere) return;
    
    const titleElement = document.querySelector('.title-rubricator h1');
    if (titleElement && this.selectedSphere.sphereTitle) {
        titleElement.innerHTML = `–ö–∞—Ç–µ–≥–æ—Ä—ñ—ó –¥–ª—è <span>"${this.selectedSphere.sphereTitle}"</span>`;
    }
    
    console.log('üìù –ó–∞–≥–æ–ª–æ–≤–æ–∫ –æ–±–Ω–æ–≤–ª–µ–Ω –¥–ª—è —Å—Ñ–µ—Ä—ã:', this.selectedSphere.sphereTitle);
}

// –ú–µ—Ç–æ–¥ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–æ–≥–æ –±–ª–æ–∫–∞
addSphereInfoBlock() {
    if (!this.selectedSphere) return;
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –¥–æ–±–∞–≤–ª–µ–Ω –ª–∏ —É–∂–µ –±–ª–æ–∫
    if (document.querySelector('.sphere-info-block')) return;
    
    const titleSection = document.getElementById('title-search-section');
    if (!titleSection) return;
    
    const infoBlock = document.createElement('div');
    infoBlock.className = 'sphere-info-block';
    infoBlock.innerHTML = `
        <div class="sphere-info-content">
            <div class="sphere-info-icon">üåü</div>
            <div class="sphere-info-text">
                <h3>–í–∏–±—Ä–∞–Ω–∞ —Å—Ñ–µ—Ä–∞: ${this.selectedSphere.sphereTitle || '–ù–µ–≤—ñ–¥–æ–º–∞ —Å—Ñ–µ—Ä–∞'}</h3>
                <p>–ü–æ–∫–∞–∑–∞–Ω–æ –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó, —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω—ñ –¥–ª—è –æ–±—Ä–∞–Ω–æ—ó —Å—Ñ–µ—Ä–∏ –º–æ–∂–ª–∏–≤–æ—Å—Ç–µ–π</p>
            </div>
            <button class="sphere-info-close" onclick="rubricatorManager.clearSphereFilter()">
                <svg width="16" height="16" viewBox="0 0 16 16" fill="none">
                    <path d="M12 4L4 12M4 4L12 12" stroke="currentColor" stroke-width="2" stroke-linecap="round"/>
                </svg>
            </button>
        </div>
    `;
    
    // –î–æ–±–∞–≤–ª—è–µ–º —Å—Ç–∏–ª–∏
    if (!document.getElementById('sphere-info-styles')) {
        const styles = document.createElement('style');
        styles.id = 'sphere-info-styles';
        styles.textContent = `
            .sphere-info-block {
                margin: 20px auto;
                max-width: 1180px;
            }
            
            .sphere-info-content {
                display: flex;
                align-items: center;
                gap: 16px;
                background: linear-gradient(135deg, var(--turquoise) 0%, var(--light-violet) 100%);
                color: white;
                padding: 16px 24px;
                border-radius: 12px;
                box-shadow: 0 4px 20px rgba(73, 211, 211, 0.3);
            }
            
            .sphere-info-icon {
                font-size: 24px;
                flex-shrink: 0;
            }
            
            .sphere-info-text {
                flex-grow: 1;
            }
            
            .sphere-info-text h3 {
                margin: 0 0 4px 0;
                font-family: var(--second-family);
                font-size: 18px;
                font-weight: 600;
            }
            
            .sphere-info-text p {
                margin: 0;
                font-family: var(--font-family);
                font-size: 14px;
                opacity: 0.9;
                text-align: left;
            }
            
            .sphere-info-close {
                background: rgba(255, 255, 255, 0.2);
                border: none;
                border-radius: 50%;
                width: 32px;
                height: 32px;
                display: flex;
                align-items: center;
                justify-content: center;
                cursor: pointer;
                transition: background-color 0.2s ease;
                color: white;
            }
            
            .sphere-info-close:hover {
                background: rgba(255, 255, 255, 0.3);
            }
            
            @media (max-width: 768px) {
                .sphere-info-content {
                    padding: 12px 16px;
                    gap: 12px;
                }
                
                .sphere-info-text h3 {
                    font-size: 16px;
                }
                
                .sphere-info-text p {
                    font-size: 13px;
                }
            }
        `;
        document.head.appendChild(styles);
    }
    
    titleSection.insertAdjacentElement('afterend', infoBlock);
}

// –ú–µ—Ç–æ–¥ –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ —Ñ–∏–ª—å—Ç—Ä–∞ –ø–æ —Å—Ñ–µ—Ä–µ
clearSphereFilter() {
    console.log('üßπ –û—á–∏—â–∞–µ–º —Ñ–∏–ª—å—Ç—Ä –ø–æ —Å—Ñ–µ—Ä–µ');
    
    // –û—á–∏—â–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ —Å—Ñ–µ—Ä–µ
    this.selectedSphere = null;
    this.currentFilters.sphere = '';
    
    // –û—á–∏—â–∞–µ–º sessionStorage
    sessionStorage.removeItem('sphereSelection');
    
    // –£–±–∏—Ä–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω—ã–π –±–ª–æ–∫
    const infoBlock = document.querySelector('.sphere-info-block');
    if (infoBlock) {
        infoBlock.remove();
    }
    
    // –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫
    const titleElement = document.querySelector('.title-rubricator h1');
    const descriptionElement = document.querySelector('.title-rubricator p');
    
    if (titleElement) {
        titleElement.innerHTML = '–ü–æ–±—É–¥—É–π –ø–∞—Ä—Ç–Ω–µ—Ä—Å—Ç–≤–æ, <span>—è–∫–µ –∑–º—ñ–Ω—é—î –≥—Ä—É</span>';
    }
    
    if (descriptionElement) {
        descriptionElement.textContent = '–ó–Ω–∞—Ö–æ–¥—å –º–æ–∂–ª–∏–≤–æ—Å—Ç—ñ —Å–ø—ñ–≤–ø—Ä–∞—Ü—ñ –∑–∞ —Å—Ñ–µ—Ä–∞–º–∏ –¥—ñ—è–ª—å–Ω–æ—Å—Ç—ñ —Ç–∞ —Ä–µ–≥—ñ–æ–Ω–∞–º–∏';
    }
    
    // –ü—Ä–∏–º–µ–Ω—è–µ–º —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏—é (–ø–æ–∫–∞–∂–µ—Ç –≤—Å–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏)
    this.applyFilters();
    
    // –û–±–Ω–æ–≤–ª—è–µ–º URL (—É–±–∏—Ä–∞–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã —Å—Ñ–µ—Ä—ã)
    const url = new URL(window.location);
    url.searchParams.delete('sphere');
    url.searchParams.delete('source');
    window.history.replaceState({}, '', url);
}

    setupEventListeners() {
        // –ü–æ–∏—Å–∫
        const searchInput = document.getElementById('categorySearch');
        const searchBtn = document.getElementById('searchBtn');

        if (searchInput) {
            searchInput.addEventListener('input', (e) => {
                this.currentFilters.search = e.target.value.toLowerCase();
                this.applyFilters();
            });

            searchInput.addEventListener('keypress', (e) => {
                if (e.key === 'Enter') {
                    this.applyFilters();
                }
            });
        }

        if (searchBtn) {
            searchBtn.addEventListener('click', () => {
                this.applyFilters();
            });
        }

        // –§–∏–ª—å—Ç—Ä—ã
        this.setupDropdown('regionBtn', 'regionDropdown', 'region');
        this.setupDropdown('businessFormBtn', 'businessFormDropdown', 'businessForm');

        // –ó–∞–∫—Ä—ã—Ç–∏–µ –¥—Ä–æ–ø–¥–∞—É–Ω–æ–≤ –ø—Ä–∏ –∫–ª–∏–∫–µ –≤–Ω–µ –∏—Ö
        document.addEventListener('click', (e) => {
            if (!e.target.closest('.filter-dropdown')) {
                this.closeAllDropdowns();
            }
        });
    }

    setupDropdown(btnId, dropdownId, filterType) {
        const btn = document.getElementById(btnId);
        const dropdown = document.getElementById(dropdownId);

        if (!btn || !dropdown) return;

        btn.addEventListener('click', (e) => {
            e.stopPropagation();
            this.toggleDropdown(btn, dropdown);
        });

        dropdown.addEventListener('click', (e) => {
            const option = e.target.closest('.filter-option');
            if (option) {
                const value = option.getAttribute('data-value');
                const text = option.textContent;
                
                this.selectFilterOption(btn, dropdown, value, text, filterType);
            }
        });
    }

    toggleDropdown(btn, dropdown) {
        const isActive = btn.classList.contains('active');
        
        // –ó–∞–∫—Ä—ã–≤–∞–µ–º –≤—Å–µ –¥—Ä–æ–ø–¥–∞—É–Ω—ã
        this.closeAllDropdowns();
        
        // –û—Ç–∫—Ä—ã–≤–∞–µ–º —Ç–µ–∫—É—â–∏–π, –µ—Å–ª–∏ –æ–Ω –±—ã–ª –∑–∞–∫—Ä—ã—Ç
        if (!isActive) {
            btn.classList.add('active');
            btn.parentElement.classList.add('active');
        }
    }

    closeAllDropdowns() {
        const activeDropdowns = document.querySelectorAll('.filter-dropdown.active');
        const activeBtns = document.querySelectorAll('.filter-btn.active');
        
        activeDropdowns.forEach(dropdown => dropdown.classList.remove('active'));
        activeBtns.forEach(btn => btn.classList.remove('active'));
    }

    selectFilterOption(btn, dropdown, value, text, filterType) {
        // –û–±–Ω–æ–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç –∫–Ω–æ–ø–∫–∏
        const filterText = btn.querySelector('.filter-text');
        if (filterText) {
            filterText.textContent = text;
        }

        // –û–±–Ω–æ–≤–ª—è–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–µ –æ–ø—Ü–∏–∏
        dropdown.querySelectorAll('.filter-option').forEach(opt => {
            opt.classList.remove('selected');
        });
        dropdown.querySelector(`[data-value="${value}"]`).classList.add('selected');

        // –ü—Ä–∏–º–µ–Ω—è–µ–º —Ñ–∏–ª—å—Ç—Ä
        this.currentFilters[filterType] = value;
        this.applyFilters();

        // –ó–∞–∫—Ä—ã–≤–∞–µ–º –¥—Ä–æ–ø–¥–∞—É–Ω
        this.closeAllDropdowns();
    }

    applyFilters() {
        this.filteredCategories = this.allCategories.filter(category => {
            const matchesSearch = !this.currentFilters.search || 
                category.name.toLowerCase().includes(this.currentFilters.search);
            
            const matchesRegion = !this.currentFilters.region || 
                category.region === this.currentFilters.region;
            
            const matchesBusinessForm = !this.currentFilters.businessForm || 
                category.businessForm === this.currentFilters.businessForm;

            return matchesSearch && matchesRegion && matchesBusinessForm;
        });

        this.currentPage = 1; // –°–±—Ä–∞—Å—ã–≤–∞–µ–º –Ω–∞ –ø–µ—Ä–≤—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
        this.renderCategories();
        this.renderPagination();
        this.updateResultsCount();
    }

    renderCategories() {
        const container = document.getElementById('categoriesContainer');
        const noResults = document.getElementById('noResults');
        
        if (!container) return;

        // –í—ã—á–∏—Å–ª—è–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –¥–ª—è —Ç–µ–∫—É—â–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã
        const startIndex = (this.currentPage - 1) * this.itemsPerPage;
        const endIndex = startIndex + this.itemsPerPage;
        
        // –û—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤—ã–≤–∞–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏—é "–Ü–Ω—à–µ" –¥–ª—è –æ—Ç–¥–µ–ª—å–Ω–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–∏
        const otherCategory = this.filteredCategories.find(cat => cat.id === 15);
        const regularCategories = this.filteredCategories.filter(cat => cat.id !== 15);
        
        // –ë–µ—Ä–µ–º –æ–±—ã—á–Ω—ã–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –¥–ª—è —Ç–µ–∫—É—â–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã (14 —à—Ç—É–∫ –º–∞–∫—Å–∏–º—É–º, —á—Ç–æ–±—ã –æ—Å—Ç–∞–≤–∏—Ç—å –º–µ—Å—Ç–æ –¥–ª—è "–Ü–Ω—à–µ")
        const maxRegularItems = this.itemsPerPage - 1; // 14 –≤–º–µ—Å—Ç–æ 15
        const regularCategoriesToShow = regularCategories.slice(startIndex, startIndex + maxRegularItems);
        
        // –í—Å–µ–≥–¥–∞ –¥–æ–±–∞–≤–ª—è–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏—é "–Ü–Ω—à–µ" –≤ –∫–æ–Ω–µ—Ü, –µ—Å–ª–∏ –æ–Ω–∞ –µ—Å—Ç—å –≤ –æ—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞–Ω–Ω—ã—Ö
        let categoriesToShow = [...regularCategoriesToShow];
        
        if (otherCategory) {
            categoriesToShow.push(otherCategory);
        }

        if (categoriesToShow.length === 0) {
            container.innerHTML = '';
            if (noResults) noResults.style.display = 'block';
            return;
        }

        if (noResults) noResults.style.display = 'none';

        container.innerHTML = categoriesToShow.map(category => `
            <div class="categories-block ${category.id === 15 ? 'other-category' : ''}" data-category-id="${category.id}">
                <div class="categories-block-top">
                    <img src="./icons/${category.icon}" alt="categories icon" width="108">
                    <a href="#" data-category="${category.name}" data-category-id="${category.id}">
                        <img class="arrow-card" src="./icons/arrow-title.svg" alt="arrow" width="14">
                        <img class="arrow-card-hover" src="./icons/arrow-title-hover.svg" alt="arrow" width="14">
                    </a>   
                </div>
                <div class="categories-block-bottom">
                    <h3>${category.name}</h3>
                </div>
            </div>
        `).join('');

        // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π –¥–ª—è —Å—Å—ã–ª–æ–∫ –∏ –±–ª–æ–∫–æ–≤
        container.querySelectorAll('a[data-category]').forEach(link => {
            link.addEventListener('click', (e) => {
                e.preventDefault();
                const categoryId = parseInt(link.getAttribute('data-category-id'));
                const categoryName = link.getAttribute('data-category');
                this.handleCategoryClick(categoryId, categoryName);
            });
        });

        // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –≤—Å–µ–≥–æ –±–ª–æ–∫–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ "–Ü–Ω—à–µ"
        container.querySelectorAll('.other-category').forEach(block => {
            block.style.cursor = 'pointer';
            block.addEventListener('click', (e) => {
                // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∫–ª–∏–∫ –Ω–µ –ø–æ —Å—Å—ã–ª–∫–µ (–æ–Ω–∞ —É–∂–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–∞ –≤—ã—à–µ)
                if (!e.target.closest('a')) {
                    const categoryId = parseInt(block.getAttribute('data-category-id'));
                    this.handleCategoryClick(categoryId, '–Ü–Ω—à–µ');
                }
            });
        });
    }

    renderPagination() {
        const container = document.getElementById('pagination');
        if (!container) return;

        // –ò—Å–∫–ª—é—á–∞–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏—é "–Ü–Ω—à–µ" –∏–∑ –ø–æ–¥—Å—á–µ—Ç–∞ –ø–∞–≥–∏–Ω–∞—Ü–∏–∏ –∏ —É—á–∏—Ç—ã–≤–∞–µ–º, —á—Ç–æ –Ω–∞ –∫–∞–∂–¥–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ 14 –æ–±—ã—á–Ω—ã—Ö + 1 "–Ü–Ω—à–µ"
        const regularCategories = this.filteredCategories.filter(cat => cat.id !== 15);
        const itemsPerPageForRegular = this.itemsPerPage - 1; // 14 –º–µ—Å—Ç –¥–ª—è –æ–±—ã—á–Ω—ã—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π
        const totalPages = Math.ceil(regularCategories.length / itemsPerPageForRegular);
        
        if (totalPages <= 1) {
            container.innerHTML = '';
            return;
        }

        let paginationHTML = '';
        let elementCount = 0; // –°—á–µ—Ç—á–∏–∫ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –¥–ª—è –≤—Å—Ç–∞–≤–∫–∏ –ª–∏–Ω–∏–π

        // –§—É–Ω–∫—Ü–∏—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ª–∏–Ω–∏–∏ –º–µ–∂–¥—É —ç–ª–µ–º–µ–Ω—Ç–∞–º–∏
        const addSeparatorLine = () => {
            if (elementCount > 0) {
                paginationHTML += `
                    <svg class="pagination-separator" width="26" height="2" viewBox="0 0 26 2" fill="none" xmlns="http://www.w3.org/2000/svg">
                        <path d="M0 1H26" stroke="#241A56" />
                    </svg>
                `;
            }
            elementCount++;
        };

        // –õ–æ–≥–∏–∫–∞ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å—Ç—Ä–∞–Ω–∏—Ü
        const maxVisiblePages = 5;
        let startPage = Math.max(1, this.currentPage - Math.floor(maxVisiblePages / 2));
        let endPage = Math.min(totalPages, startPage + maxVisiblePages - 1);

        // –ö–æ—Ä—Ä–µ–∫—Ç–∏—Ä—É–µ–º –Ω–∞—á–∞–ª—å–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É –µ—Å–ª–∏ –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ç—Ä–∞–Ω–∏—Ü –≤ –∫–æ–Ω—Ü–µ
        if (endPage - startPage + 1 < maxVisiblePages) {
            startPage = Math.max(1, endPage - maxVisiblePages + 1);
        }

        // –ü–µ—Ä–≤–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –∏ –º–Ω–æ–≥–æ—Ç–æ—á–∏–µ
        if (startPage > 1) {
            addSeparatorLine();
            paginationHTML += `
                <button class="pagination-btn" onclick="rubricatorManager.goToPage(1)">1</button>
            `;
            elementCount++;
            
            if (startPage > 2) {
                addSeparatorLine();
                paginationHTML += '<span class="pagination-dots">...</span>';
                elementCount++;
            }
        }

        // –í–∏–¥–∏–º—ã–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
        for (let page = startPage; page <= endPage; page++) {
            addSeparatorLine();
            paginationHTML += `
                <button class="pagination-btn ${page === this.currentPage ? 'active' : ''}" 
                        onclick="rubricatorManager.goToPage(${page})">
                    ${page}
                </button>
            `;
            elementCount++;
        }

        // –ú–Ω–æ–≥–æ—Ç–æ—á–∏–µ –∏ –ø–æ—Å–ª–µ–¥–Ω—è—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞
        if (endPage < totalPages) {
            if (endPage < totalPages - 1) {
                addSeparatorLine();
                paginationHTML += '<span class="pagination-dots">...</span>';
                elementCount++;
            }
            addSeparatorLine();
            paginationHTML += `
                <button class="pagination-btn" onclick="rubricatorManager.goToPage(${totalPages})">
                    ${totalPages}
                </button>
            `;
            elementCount++;
        }
        container.innerHTML = paginationHTML;
    }

    goToPage(page) {
        const totalPages = Math.ceil(this.filteredCategories.length / this.itemsPerPage);
        
        if (page < 1 || page > totalPages) return;
        
        this.currentPage = page;
        this.renderCategories();
        this.renderPagination();
        
        // –ü–ª–∞–≤–Ω–∞—è –ø—Ä–æ–∫—Ä—É—Ç–∫–∞ –∫ –Ω–∞—á–∞–ª—É –∫–∞—Ç–µ–≥–æ—Ä–∏–π
        const categoriesSection = document.getElementById('categories-section');
        if (categoriesSection) {
            categoriesSection.scrollIntoView({ 
                behavior: 'smooth', 
                block: 'start' 
            });
        }
    }

    updateResultsCount() {
    const countElement = document.getElementById('resultsCount');
        if  (countElement) {
            const count = this.filteredCategories.length;
            const word = this.getPlural(count, '–∫–∞—Ç–µ–≥–æ—Ä—ñ—è', '–∫–∞—Ç–µ–≥–æ—Ä—ñ—ó', '–∫–∞—Ç–µ–≥–æ—Ä—ñ–π');
        
            let text = `–ó–Ω–∞–π–¥–µ–Ω–æ: ${count} ${word}`;
        
            if (this.selectedSphere) {
                text += ` –¥–ª—è —Å—Ñ–µ—Ä–∏ "${this.selectedSphere.sphereTitle || this.selectedSphere.sphereType}"`;
            }
        
            countElement.textContent = text;
        }
    }

    getPlural(number, one, few, many) {
        const mod10 = number % 10;
        const mod100 = number % 100;
        
        if (mod100 >= 11 && mod100 <= 19) {
            return many;
        }
        if (mod10 === 1) {
            return one;
        }
        if (mod10 >= 2 && mod10 <= 4) {
            return few;
        }
        return many;
    }

    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–ª–∏–∫–æ–≤ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º
    handleCategoryClick(categoryId, categoryName) {
        console.log(`üéØ –ö–ª–∏–∫ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏: ${categoryName} (ID: ${categoryId})`);
        
        if (categoryId === 15) {
            // –°–ø–µ—Ü–∏–∞–ª—å–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –¥–ª—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ "–Ü–Ω—à–µ"
            this.navigateToNextPage();
        } else {
            // –û–±—ã—á–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –¥–ª—è –¥—Ä—É–≥–∏—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π
            this.navigateToCategory(categoryId, categoryName);
        }
    }

    // –ü–µ—Ä–µ—Ö–æ–¥ –Ω–∞ —Å–ª–µ–¥—É—é—â—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É –ø–∞–≥–∏–Ω–∞—Ü–∏–∏ –¥–ª—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ "–Ü–Ω—à–µ"
    navigateToNextPage() {
        console.log('üöÄ –ü–µ—Ä–µ—Ö–æ–¥ –Ω–∞ —Å–ª–µ–¥—É—é—â—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É –ø–∞–≥–∏–Ω–∞—Ü–∏–∏');
        
        // –°—á–∏—Ç–∞–µ–º –æ–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç—Ä–∞–Ω–∏—Ü (–∏—Å–∫–ª—é—á–∞—è "–Ü–Ω—à–µ")
        const regularCategories = this.filteredCategories.filter(cat => cat.id !== 15);
        const totalPages = Math.ceil(regularCategories.length / (this.itemsPerPage - 1)); // -1 –ø–æ—Ç–æ–º—É —á—Ç–æ –º–µ—Å—Ç–æ –∑–∞–Ω–∏–º–∞–µ—Ç "–Ü–Ω—à–µ"
        
        if (this.currentPage < totalPages) {
            // –ü–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ —Å–ª–µ–¥—É—é—â—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
            this.goToPage(this.currentPage + 1);
        } else {
            // –ï—Å–ª–∏ —ç—Ç–æ –ø–æ—Å–ª–µ–¥–Ω—è—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞, –º–æ–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å —á—Ç–æ-—Ç–æ –¥—Ä—É–≥–æ–µ
            console.log('üèÅ –≠—Ç–æ –ø–æ—Å–ª–µ–¥–Ω—è—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞');
            this.showEndMessage();
        }
    }

    // –ü–æ–∫–∞–∑–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –æ —Ç–æ–º, —á—Ç–æ —ç—Ç–æ –ø–æ—Å–ª–µ–¥–Ω—è—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞
    showEndMessage() {
        // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–µ–∫—É—â–∏–π —è–∑—ã–∫
        const isEnglishPage = window.location.pathname.includes('/en/');
        
        const message = isEnglishPage 
            ? 'You have reached the last page!' 
            : '–í–∏ –¥–æ—Å—è–≥–ª–∏ –æ—Å—Ç–∞–Ω–Ω—å–æ—ó —Å—Ç–æ—Ä—ñ–Ω–∫–∏!';
            
        const submessage = isEnglishPage 
            ? 'Try changing your filters or search parameters.' 
            : '–°–ø—Ä–æ–±—É–π—Ç–µ –∑–º—ñ–Ω–∏—Ç–∏ —Ñ—ñ–ª—å—Ç—Ä–∏ –∞–±–æ –ø–∞—Ä–∞–º–µ—Ç—Ä–∏ –ø–æ—à—É–∫—É.';

        // –°–æ–∑–¥–∞–µ–º –∫—Ä–∞—Å–∏–≤–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
        const notification = document.createElement('div');
        notification.className = 'end-notification';
        notification.innerHTML = `
            <div class="end-notification-content">
                <div class="end-notification-icon">üèÅ</div>
                <div class="end-notification-text">
                    <h4>${message}</h4>
                    <p>${submessage}</p>
                </div>
                <button class="end-notification-close" onclick="this.parentElement.parentElement.remove()">√ó</button>
            </div>
        `;

        // –î–æ–±–∞–≤–ª—è–µ–º —Å—Ç–∏–ª–∏ –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
        if (!document.querySelector('#end-notification-styles')) {
            const styles = document.createElement('style');
            styles.id = 'end-notification-styles';
            styles.textContent = `
                .end-notification {
                    position: fixed;
                    top: 20px;
                    right: 20px;
                    z-index: 10000;
                    animation: slideInRight 0.3s ease;
                }
                
                .end-notification-content {
                    display: flex;
                    align-items: center;
                    gap: 12px;
                    background: var(--white);
                    border: 2px solid var(--turquoise);
                    border-radius: 12px;
                    padding: 16px 20px;
                    box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);
                    max-width: 350px;
                }
                
                .end-notification-icon {
                    font-size: 24px;
                }
                
                .end-notification-text h4 {
                    margin: 0 0 4px 0;
                    font-family: var(--second-family);
                    font-size: 16px;
                    color: var(--text-dark);
                }
                
                .end-notification-text p {
                    margin: 0;
                    font-family: var(--font-family);
                    font-size: 14px;
                    color: var(--gray);
                    text-align: left;
                    line-height: 1.3;
                }
                
                .end-notification-close {
                    background: none;
                    border: none;
                    font-size: 20px;
                    cursor: pointer;
                    color: var(--gray);
                    padding: 0;
                    width: 24px;
                    height: 24px;
                    display: flex;
                    align-items: center;
                    justify-content: center;
                    border-radius: 50%;
                    transition: background-color 0.2s ease;
                }
                
                .end-notification-close:hover {
                    background-color: var(--light-gray);
                }
                
                @keyframes slideInRight {
                    from {
                        transform: translateX(100%);
                        opacity: 0;
                    }
                    to {
                        transform: translateX(0);
                        opacity: 1;
                    }
                }
            `;
            document.head.appendChild(styles);
        }

        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
        document.body.appendChild(notification);

        // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —É–±–∏—Ä–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —á–µ—Ä–µ–∑ 5 —Å–µ–∫—É–Ω–¥
        setTimeout(() => {
            if (notification.parentElement) {
                notification.remove();
            }
        }, 5000);
    }

    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –¥–ª—è –æ–±—ã—á–Ω—ã—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π
    navigateToCategory(categoryId, categoryName) {
    console.log(`üìÇ –ü–µ—Ä–µ—Ö–æ–¥ –≤ –∫–∞—Ç–µ–≥–æ—Ä–∏—é: ${categoryName}`);
    
    // –ù–∞—Ö–æ–¥–∏–º –∫–∞—Ç–µ–≥–æ—Ä–∏—é –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–∫–æ–Ω–∫–∏
    const category = this.allCategories.find(cat => cat.id === categoryId);
    
    // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–µ–∫—É—â–∏–π —è–∑—ã–∫
    const isEnglishPage = window.location.pathname.includes('/en/');
    
    // –°–æ–∑–¥–∞–µ–º URL –¥–ª—è —Å—Ç—Ä–∞–Ω–∏—Ü—ã –≥–∞–ª—É–∑—ñ
    const branchUrl = isEnglishPage ? '/en/branch.html' : '/branch.html';
    
    // –°–æ–∑–¥–∞–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –¥–ª—è –ø–µ—Ä–µ–¥–∞—á–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
    const params = new URLSearchParams({
        category: categoryId,
        name: categoryName,
        icon: category ? category.icon : 'categories-icon.svg' // –î–æ–±–∞–≤–ª—è–µ–º –∏–∫–æ–Ω–∫—É
    });
    
    const fullUrl = `${branchUrl}?${params.toString()}`;
    
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≤—ã–±–æ—Ä–µ
    try {
        const selectionData = {
            categoryId: categoryId,
            categoryName: categoryName,
            categoryIcon: category ? category.icon : 'categories-icon.svg', // –î–æ–±–∞–≤–ª—è–µ–º –∏–∫–æ–Ω–∫—É
            timestamp: new Date().toISOString(),
            filters: { ...this.currentFilters },
            currentPage: this.currentPage,
            source: 'rubricator'
        };
        localStorage.setItem('selectedCategory', JSON.stringify(selectionData));
    } catch (e) {
        console.warn('–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –≤ localStorage:', e);
    }
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≥—Ä—É–∑–∫–∏
    this.showLoadingIndicator();
    
    // –ü–µ—Ä–µ—Ö–æ–¥
    setTimeout(() => {
        window.location.href = fullUrl;
    }, 300);
}

    // –°–æ–∑–¥–∞–Ω–∏–µ slug –¥–ª—è URL –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
    createCategorySlug(categoryName) {
        const translitMap = {
            '–∞': 'a', '–±': 'b', '–≤': 'v', '–≥': 'g', '–¥': 'd', '–µ': 'e', '—î': 'ie',
            '–∂': 'zh', '–∑': 'z', '–∏': 'y', '—ñ': 'i', '—ó': 'yi', '–π': 'y', '–∫': 'k',
            '–ª': 'l', '–º': 'm', '–Ω': 'n', '–æ': 'o', '–ø': 'p', '—Ä': 'r', '—Å': 's',
            '—Ç': 't', '—É': 'u', '—Ñ': 'f', '—Ö': 'kh', '—Ü': 'ts', '—á': 'ch', '—à': 'sh',
            '—â': 'shch', '—å': '', '—é': 'yu', '—è': 'ya', "'": '', "'": ''
        };
        
        return categoryName
            .toLowerCase()
            .split('')
            .map(char => translitMap[char] || char)
            .join('')
            .replace(/[^a-z0-9]/g, '-')
            .replace(/-+/g, '-')
            .replace(/^-|-$/g, '');
    }

    // –ü–æ–∫–∞–∑–∞—Ç—å –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≥—Ä—É–∑–∫–∏
    showLoadingIndicator() {
        const container = document.getElementById('categoriesContainer');
        if (container) {
            container.classList.add('loading');
        }
    }

    // –°–∫—Ä—ã—Ç—å –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≥—Ä—É–∑–∫–∏
    hideLoadingIndicator() {
        const container = document.getElementById('categoriesContainer');
        if (container) {
            container.classList.remove('loading');
        }
    }
    addCategory(category) {
        const newId = Math.max(...this.allCategories.map(c => c.id)) + 1;
        const newCategory = { ...category, id: newId };
        this.allCategories.push(newCategory);
        this.applyFilters();
        console.log('–î–æ–±–∞–≤–ª–µ–Ω–∞ –Ω–æ–≤–∞—è –∫–∞—Ç–µ–≥–æ—Ä–∏—è:', newCategory);
    }

    removeCategory(categoryId) {
        this.allCategories = this.allCategories.filter(c => c.id !== categoryId);
        this.applyFilters();
        console.log('–£–¥–∞–ª–µ–Ω–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏—è —Å ID:', categoryId);
    }

    clearFilters() {
        // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Ñ–∏–ª—å—Ç—Ä—ã
        this.currentFilters = {
            search: '',
            region: '',
            businessForm: ''
        };

        // –û—á–∏—â–∞–µ–º –ø–æ–ª–µ –ø–æ–∏—Å–∫–∞
        const searchInput = document.getElementById('categorySearch');
        if (searchInput) {
            searchInput.value = '';
        }

        // –°–±—Ä–∞—Å—ã–≤–∞–µ–º –¥—Ä–æ–ø–¥–∞—É–Ω—ã
        const regionBtn = document.getElementById('regionBtn');
        const businessFormBtn = document.getElementById('businessFormBtn');
        
        if (regionBtn) {
            regionBtn.querySelector('.filter-text').textContent = '–†–µ–≥—ñ–æ–Ω';
        }
        if (businessFormBtn) {
            businessFormBtn.querySelector('.filter-text').textContent = '–§–æ—Ä–º–∞ –±—ñ–∑–Ω–µ—Å—É';
        }

        // –£–±–∏—Ä–∞–µ–º –≤—ã–¥–µ–ª–µ–Ω–∏–µ —Å –æ–ø—Ü–∏–π
        document.querySelectorAll('.filter-option.selected').forEach(option => {
            option.classList.remove('selected');
        });

        // –í—ã–¥–µ–ª—è–µ–º "–í—Å—ñ" –æ–ø—Ü–∏–∏
        document.querySelectorAll('.filter-option[data-value=""]').forEach(option => {
            option.classList.add('selected');
        });

        this.applyFilters();
        console.log('–§–∏–ª—å—Ç—Ä—ã –æ—á–∏—â–µ–Ω—ã');
    }

    // –ú–µ—Ç–æ–¥ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–µ–∫—É—â–µ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è
    getState() {
        return {
            currentPage: this.currentPage,
            totalPages: Math.ceil(this.filteredCategories.length / this.itemsPerPage),
            totalCategories: this.allCategories.length,
            filteredCategories: this.filteredCategories.length,
            filters: { ...this.currentFilters }
        };
    }
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
let rubricatorManager;

document.addEventListener('DOMContentLoaded', () => {
    // –ñ–¥–µ–º –∑–∞–≥—Ä—É–∑–∫–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
    if (document.body.classList.contains('components-ready')) {
        initRubricator();
    } else {
        document.addEventListener('componentsLoaded', initRubricator);
    }
});

function initRubricator() {
    console.log('üöÄ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ä—É–±—Ä–∏–∫–∞—Ç–æ—Ä–∞...');
    rubricatorManager = new RubricatorManager();
    
    // –î–æ–±–∞–≤–ª—è–µ–º –≥–ª–æ–±–∞–ª—å–Ω—ã–µ –≥–æ—Ä—è—á–∏–µ –∫–ª–∞–≤–∏—à–∏
    document.addEventListener('keydown', (e) => {
        if (e.key === 'Escape') {
            rubricatorManager.closeAllDropdowns();
        }
        
        // Ctrl + / –¥–ª—è —Ñ–æ–∫—É—Å–∞ –Ω–∞ –ø–æ–∏—Å–∫–µ
        if (e.ctrlKey && e.key === '/') {
            e.preventDefault();
            const searchInput = document.getElementById('categorySearch');
            if (searchInput) {
                searchInput.focus();
            }
        }
    });
    
    console.log('‚úÖ –†—É–±—Ä–∏–∫–∞—Ç–æ—Ä –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ!');
}

// –≠–∫—Å–ø–æ—Ä—Ç –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ –¥—Ä—É–≥–∏—Ö —Å–∫—Ä–∏–ø—Ç–∞—Ö
window.RubricatorManager = RubricatorManager;